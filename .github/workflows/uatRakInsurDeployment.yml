name: UAT-RAKINSURANCE-DEPLOYMENT

on:
  workflow_dispatch:
    inputs:
      deployment_directory: 
        description: Enter the directory to be deployed
        required: true
        default: Deploy_UAT_27052025

jobs:
  HTTPD_STOP:
    outputs:
      test-result: ${{ steps.set_outputs.outputs.test-result }}
    runs-on: 
      labels: uatcicd
    steps:
      - name: HTTPD STOP
        run: |
          ansible-playbook -b \--extra-vars 'target=ROC-UATVINYLPLUS' \playbook/uatRakInsurDeployment.yml --tags httpd_stop

      - name: Change env variable
        run: echo "::set-env name=Current_date::$(date +'%Y%m%d%H%M')"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

      - name: Print new value of env variable
        run: echo "Current_date = $Current_date"

      - name: set outputs
        id: set_outputs
        run: |
          echo "::set-output name=test-result::$Current_date"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"          


  STOP_TOMCAT:
    needs: [HTTPD_STOP]
    runs-on: 
      labels: uatcicd
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: List Files
        run: |
          ls -tlr
          pwd

      - name: TOMCAT STOP
        run: |
          ansible-playbook -b --extra-vars 'target=ROC-UATVINYLPLUS' playbook/uatRakInsurDeployment.yml --tags tomcat_stop
  
  BACKUP_DEPLOY:
    needs: [STOP_TOMCAT]
    runs-on: 
      labels: uatcicd
    steps:
      - name: BACKUP, DEPLOY ROOT.war and Unzip RAK-UAT Zip file
        run: |
          ansible-playbook -b --extra-vars 'target=ROC-UATVINYLPLUS' -e deploy_dir="${{ github.event.inputs.deployment_directory }}" -e folder_date=${{ needs.HTTPD_STOP.outputs.test-result }} playbook/uatRakInsurDeployment.yml --tags deploy

  # UNZIP_RAK_UAT_FILE:
  #   needs: [BACKUP_DEPLOY]
  #   runs-on: 
  #     labels: uatcicd
  #   steps:
  #     - name: Unzip RAK UAT folder
  #       run: |
  #         ansible-playbook -b --extra-vars 'target=ROC-UATVINYLPLUS' -e deploy_dir="${{ github.event.inputs.deployment_directory }}" playbook/uatRakInsurDeployment.yml --tags unzip


  TOMCAT_START:
    needs: [BACKUP_DEPLOY]
    runs-on: 
      labels: uatcicd
    steps:
      - name: TOMCAT START
        run: |
          ansible-playbook -b --extra-vars 'target=ROC-UATVINYLPLUS' playbook/uatRakInsurDeployment.yml --tags tomcat_start


  PROPSUAT_COPY:
    needs: [TOMCAT_START]
    runs-on:
      labels: uatcicd
    steps:
    - name: Copy propsuat from backup and restart Tomcat
      run: |
        ansible-playbook -b --extra-vars 'target=ROC-UATVINYLPLUS' -e folder_date=${{ needs.HTTPD_STOP.outputs.test-result }} playbook/uatRakInsurDeployment.yml --tags propsuat_copy

  
  HTTPD_START:
    needs: [PROPSUAT_COPY]
    runs-on: 
      labels: uatcicd
    steps:
      - name: HTTPD START
        run: |
          ansible-playbook -b --extra-vars 'target=ROC-UATVINYLPLUS' playbook/uatRakInsurDeployment.yml --tags httpd_start
